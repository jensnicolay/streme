; recursive version of Gabriel benchmark diviter

(letrec ((recursive-div2 (lambda (l)
                           (cond ((null? l) '())
                                (else (cons (car l) (recursive-div2 (cddr l))))))))
  (recursive-div2 '(
                    () () () () () () () () () ()
                    () () () () () () () () () ()
                    () () () () () () () () () ()
                    () () () () () () () () () ()
                    () () () () () () () () () ()
                    () () () () () () () () () ()
                    () () () () () () () () () ()
                    () () () () () () () () () ()
                    () () () () () () () () () ()
                    () () () () () () () () () ()
                    () () () () () () () () () ()
                    () () () () () () () () () ()
                    () () () () () () () () () ()
                    () () () () () () () () () ()
                    () () () () () () () () () ()
                    () () () () () () () () () ()
                    () () () () () () () () () ()
                    () () () () () () () () () ()
                    () () () () () () () () () ()
                    () () () () () () () () () ())))
